// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountTypes {
  BUSINESS
  CUSTOMER
  ADMIN
  SUB_1
  SUB_2
}

enum AccountStatuses {
  ACTIVE
  INACTIVE
}

enum StockIndicator {
  LOW
  NORMAL
  HIGH
}

model Account {
  id          String          @id @default(uuid())
  email       String          @db.VarChar(100)
  status      AccountStatuses @default(INACTIVE)
  accountType AccountTypes
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  Profile     Profile?

  @@map("account")
}

model Profile {
  id         String   @id @default(uuid())
  firstname  String   @db.VarChar(100)
  lastname   String   @db.VarChar(100)
  middlename String?  @db.VarChar(100)
  address    String   @db.VarChar(100)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @unique

  @@map("profile")
}

model Products {
  id String @id @default(uuid())

  name    String   @db.VarChar(100)
  code    String   @db.VarChar(100)
  size    String?  @db.VarChar(100)
  price   Decimal  @db.Decimal(9, 2)
  content Decimal? @db.Decimal(9, 2)

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Inventory Inventory[]

  @@map("products")
}

model Inventory {
  id String @id @default(uuid())

  stock          Int
  stockIndicator StockIndicator @default(NORMAL)
  expiration     String?        @db.VarChar(100)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products  Products? @relation(fields: [productId], references: [id])
  productId String?

  @@map("inventory")
}
